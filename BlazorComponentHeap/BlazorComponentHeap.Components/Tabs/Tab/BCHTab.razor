<div @key="@_updateKey"
     id="@TabModel.Id"
     class="@($"bch-tab-element {TabContext.ClassIndetifier} noselectable-text " +
              $"{(IsSelected() ? "bch-selected " : "")}" +
              $"{(_dragging ? "bch-dragging " : "")}" +
              $"{(_isDragOver ? "bch-hovered " : "")}" +
              $"{(_direction ? "bch-left " : "bch-right ")}" +
              $"{(_firstDragOver ? "bch-first-drag " : "")}" +
              $"{TabModel.CssClass}"
     )"
     style="@(
        $"min-width: {(_isDragOver ? (TabModel.Width + TabContext.DraggingTabModel!.Width + Gap) : TabModel.Width).ToString(_numberFormatWithDot)}px; " +
        $"height: {Height}px;"
     )"
     draggable="@((Draggable && TabContext.Orderable && PanelModel.TabModels.Count > 1).ToString())"
     @onextdragstart="OnDragStart"
     @onextdragend="OnDragEnd"
     @ondragenter="() => {}"
     @ondragenter:preventDefault
     @onclick="async () => { await OnClick.InvokeAsync(); }">

    @*@ondragenter important, it is used in order to kepp dragging icon while dragging *@

    <div class="bch-before"
         style="@($"{(_isDragOver && _direction ? $"max-width: {(TabContext.DraggingTabModel!.Width + Gap).ToString(_numberFormatWithDot)}px;" : "")}")"></div>

    <div class="bch-wrapper @TabContext.ClassIndetifier" style="width: @(TabModel.Width.ToString(_numberFormatWithDot))px;">

        @if (TabModel.TabTemplate == null)
        {
            <div class="bch-icon">
                <img class="noselectable-text" src="@(IsSelected() ? TabModel.SelectedIconImage : TabModel.IconImage)" />
            </div>
            <div class="bch-name noselectable-text">@TabModel.Name</div>
            <div class="bch-close"
             @onclick="OnCloseClickedAsync"
             @onclick:stopPropagation>
                <img class="noselectable-text"
                 src='@(IsSelected() ? _closeIconSelected : _closeIcon)' />
            </div>

            <div class="bch-bottom-line"></div>
        }
        else
        {
            @TabModel.TabTemplate(TabModel)
        }

    </div>

    <div class="bch-after"
         style="@($"{(_isDragOver && !_direction ? $"max-width: {(TabContext.DraggingTabModel!.Width + Gap).ToString(_numberFormatWithDot)}px;" : "")}")"></div>
</div>