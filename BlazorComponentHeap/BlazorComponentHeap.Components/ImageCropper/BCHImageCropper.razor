@using BlazorComponentHeap.Components.Models.Cropper
@using BlazorComponentHeap.Components.Models.Zoom
<div class="bch-image-cropper-container @(IsMobile ? " bch-mobile" : "")">

    @if (IsMobile)
    {
        <div class="bch-controls">
            <div class="bch-btn bch-cancel noselectable-text">Cancel</div>
            <div class="bch-btn bch-save noselectable-text">Save</div>
        </div>
    }

    <div class="bch-cropper-container">
        <BCHCropper @ref="_bchCropper"
                    Quality="1.0f"
                    BackgroundColor="@BackgroundColor"
                    CropperType="CropperType.MovableRectangle"
                    CroppedWidth="200"
                    Ratio="@(16.0f / 9.0f)"
                    ViewMode="ViewMode.StretchToBorders"
                    StretchCropArea="true"
                    Base64Image="@Base64Image"
                    MinScale="@MinScale"
                    MaxScale="@MaxScale"
                    MinRectangleWidth="100"
                    MinRectangleHeight="100"
                    ZoomContext="_zoomContext"/>
    </div>

    <div class="bch-control-container">
        <div class="bch-first-line">
            <div class="bch-left">

                <div class="bch-rotate-btn bch-left" 
                     @ontouchstart="async () => { await OnMouseDownAsync(-0.008f); }"
                     @onmousedown="async () => { await OnMouseDownAsync(-0.008f); }">
                    <div class="bch-icon"></div>
                    <div class="bch-text noselectable-text">Rotate Left</div>
                </div>

                <div class="bch-rotate-btn bch-right" 
                     @onmousedown="async () => { await OnMouseDownAsync(+0.008f); }"
                     @ontouchstart="async () => { await OnMouseDownAsync(+0.008f); }">
                    <div class="bch-icon"></div>
                    <div class="bch-text noselectable-text">Rotate Right</div>
                </div>

            </div>
            <div class="bch-right">
                <div class="images">
                    <div class="icon-small"></div>
                    <div class="icon-big"></div>
                </div>
                <div class="range">
                    <BCHRange @ref="_bchRange"
                              ShowFillColor="true"
                              Min="MinScale"
                              Max="MaxScale"
                              ShowTooltip="false"
                              ValueChanged="OnRangeMove"/>
                </div>
            </div>
        </div>

        <div class="bch-second-line">
            <div class="bch-scale-blocks">
                <div class="bch-block">
                    <div class="bch-rect"></div>
                    <div class="bch-text noselectable-text">1:1</div>
                </div>

                <div class="bch-block">
                    <div class="bch-rect"></div>
                    <div class="bch-text noselectable-text">3:4</div>
                </div>

                <div class="bch-block">
                    <div class="bch-rect"></div>
                    <div class="bch-text noselectable-text">4:3</div>
                </div>

                <div class="bch-block">
                    <div class="bch-rect"></div>
                    <div class="bch-text noselectable-text">16:9</div>
                </div>
            </div>

            @if (!IsMobile)
            {
                <div class="bch-controls">
                    <div class="bch-btn bch-cancel noselectable-text">Cancel</div>
                    <div class="bch-btn bch-save noselectable-text">Save</div>
                </div>
            }

        </div>
    </div>
</div>

<style>

    .bch-image-cropper-container .bch-gorizontal-range-container {
        height: 8px;
    }    
    
    .bch-image-cropper-container .bch-gorizontal-range-container .bch-range-circle {
        width:  22px;
        height: 22px;
        top: -6.5px;
    }
    
</style>